{"version":3,"sources":["redux/playing/productActions.js","redux/playing/selectors.js","redux/playing/musicReducer.js","redux/index.js","redux/store.js","components/Loading/styles.js","components/Loading/index.js","App.js","index.js","redux/playing/action-types.js"],"names":["setMusic","products","type","ActionTypes","SET_MUSIC","payload","setCurrentTime","SET_CURRENT_TIME","setDuration","SET_DURATION","setIsPlaying","SET_IS_PLAYING","setIsEnded","SET_IS_ENDED","setVolume","SET_VOLUME","selectros","isItemInList","id","store","currentMusic","some","item","getMusic","music","musicInitialState","reducers","combineReducers","state","REMOVE_MUSIC","filter","duration","currentTime","isPlaying","isEnded","volume","persistConfig","key","storage","persistedReducer","persistReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","rotate","keyframes","StLoadingContainer","styled","section","StLoadingLayoutContainer","main","Loading","Error","lazy","NowPlaying","Home","Explore","Igtv","Microphone","Time","App","audio","useRef","useSelector","useState","dispatch","useDispatch","time","current","ended","useEffect","interval","setInterval","clearInterval","play","pause","fallback","path","exact","ref","src","music_src","autoPlay","configStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0424c678.chunk.js","sourcesContent":["import { ActionTypes } from \"./action-types\";\n\n//always returns an object\n\nexport const setMusic = (products) => {\n  return {\n    type: ActionTypes.SET_MUSIC, //type of action\n    payload: products, //products that we are passing in\n  };\n};\nexport const removeMusic = (products) => {\n  return {\n    type: ActionTypes.REMOVE_MUSIC, //type of action\n    payload: products, //products that we are passing in\n  };\n};\n\nexport const setCurrentTime = (products) => {\n  return {\n    type: ActionTypes.SET_CURRENT_TIME, //type of action\n    payload: products, //products that we are passing in\n  };\n};\nexport const setDuration = (products) => {\n  return {\n    type: ActionTypes.SET_DURATION, //type of action\n    payload: products, //products that we are passing in\n  };\n};\nexport const setIsPlaying = (products) => {\n  return {\n    type: ActionTypes.SET_IS_PLAYING, //type of action\n    payload: products, //products that we are passing in\n  };\n};\nexport const setIsEnded = (products) => {\n  return {\n    type: ActionTypes.SET_IS_ENDED, //type of action\n    payload: products, //products that we are passing in\n  };\n};\nexport const setVolume = (products) => {\n  return {\n    type: ActionTypes.SET_VOLUME, //type of action\n    payload: products, //products that we are passing in\n  };\n};\n","const getMusic = (store) => store.music.currentMusic;\n\nconst isItemInList = (id) => (store) => {\n  return store.currentMusic.currentMusic.some((item) => item.id === id);\n};\n\nconst selectros = {\n  isItemInList,\n  getMusic,\n};\n\nexport default selectros;\n","import { ActionTypes } from \"./action-types\";\n\nconst musicInitialState = {\n  currentMusic: {},\n};\n\nexport const musicReducer = (state = musicInitialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_MUSIC:\n      return { ...state, currentMusic: { ...payload } };\n    case ActionTypes.REMOVE_MUSIC:\n      return {\n        ...state,\n        currentMusic: state.currentMusic.filter(\n          (item) => item.id !== payload.id\n        ),\n      };\n    case ActionTypes.SET_DURATION:\n      return {\n        ...state,\n        currentMusic: { ...state.currentMusic, duration: payload },\n      };\n    case ActionTypes.SET_CURRENT_TIME:\n      return {\n        ...state,\n        currentMusic: { ...state.currentMusic, currentTime: payload },\n      };\n    case ActionTypes.SET_IS_PLAYING:\n      return {\n        ...state,\n        currentMusic: { ...state.currentMusic, isPlaying: payload },\n      };\n    case ActionTypes.SET_IS_ENDED:\n      return {\n        ...state,\n        currentMusic: { ...state.currentMusic, isEnded: payload },\n      };\n    case ActionTypes.SET_VOLUME:\n      return {\n        ...state,\n        currentMusic: { ...state.currentMusic, volume: payload },\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { musicReducer } from \"./playing/musicReducer\";\n\n//combine reducers\nconst reducers = combineReducers({\n  music: musicReducer,\n});\n\nexport default reducers;\n","import { createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport reducers from \"./index\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst store = () => {\n  let store = createStore(\n    persistedReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nexport default store;\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\nto{transform : rotate(360deg)}\n`;\n\nexport const StLoadingContainer = styled.section`\n  width: 100vw;\n  height: 100vh;\n  color: #fff;\n  font-size: 2rem;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  & span {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    border: 2px solid #fff;\n    border-top-color: #909090;\n    animation: ${rotate} 0.6s linear infinite;\n  }\n`;\nexport const StLoadingLayoutContainer = styled.main`\n  min-width: 100vw;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-color: #000;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n","import React from \"react\";\nimport { StLoadingContainer, StLoadingLayoutContainer } from \"./styles\";\n\nconst Loading = () => {\n  return (\n    <StLoadingLayoutContainer>\n      <StLoadingContainer>\n        <span />\n      </StLoadingContainer>\n    </StLoadingLayoutContainer>\n  );\n};\n\nexport default Loading;\n","import React, { lazy, Suspense, useRef, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Loading from \"./components/Loading\";\nimport {\n  setCurrentTime,\n  setDuration,\n  setIsEnded,\n} from \"./redux/playing/productActions\";\nimport selectros from \"./redux/playing/selectors\";\n\nconst Error = lazy(() => import(\"./components/Error\"));\nconst NowPlaying = lazy(() => import(\"./components/NowPlaying\"));\nconst Home = lazy(() => import(\"./components/Home\"));\nconst Explore = lazy(() => import(\"./components/Explore\"));\nconst Igtv = lazy(() => import(\"./components/Igtv\"));\nconst Microphone = lazy(() => import(\"./components/Microphone\"));\nconst Time = lazy(() => import(\"./components/Time\"));\n\nfunction App() {\n  const audio = useRef();\n  const currentMusic = useSelector(selectros.getMusic);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const dispatch = useDispatch();\n\n  const time = audio?.current?.duration;\n  const currentTime = audio?.current?.currentTime;\n  const isEnded = audio?.current?.ended;\n  const volume = currentMusic?.volume / 10;\n\n  useEffect(() => {\n    dispatch(setDuration(time));\n    const interval = setInterval(() => {\n      dispatch(setCurrentTime(currentTime));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [dispatch, time, currentTime]);\n\n  useEffect(() => {\n    setIsPlaying(currentMusic?.isPlaying);\n    if (isPlaying) {\n      audio?.current?.play();\n    } else {\n      audio?.current?.pause();\n    }\n  }, [isPlaying, currentMusic?.isPlaying]);\n\n  useEffect(() => {\n    dispatch(setIsEnded(isEnded));\n  }, [dispatch, isEnded]);\n\n  useEffect(() => {\n    audio.current.volume = volume ? volume : 1;\n  }, [volume, isPlaying]);\n\n  return (\n    <Suspense fallback={<Loading />}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/microphone\" exact>\n            <Microphone />\n          </Route>\n          <Route path=\"/time\" exact>\n            <Time />\n          </Route>\n          <Route path=\"/igtv\" exact>\n            <Igtv />\n          </Route>\n          <Route path=\"/explore\" exact>\n            <Explore />\n          </Route>\n          <Route path=\"/nowplaying/:id\" exact>\n            <NowPlaying />\n          </Route>\n          <Route>\n            <Error />\n          </Route>\n        </Switch>\n      </Router>\n      <audio\n        ref={audio}\n        src={currentMusic?.music_src}\n        autoPlay\n        id=\"audio\"\n      ></audio>\n    </Suspense>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport configStore from \"./redux/store\";\nimport App from \"./App\";\n\nconst { store, persistor } = configStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const ActionTypes = {\n  SET_MUSIC: \"SET_MUSIC\",\n  SET_DURATION: \"SET_DURATION\",\n  SET_CURRENT_TIME: \"SET_CURRENT_TIME\",\n  SET_IS_PLAYING: \"SET_IS_PLAYING\",\n  SET_IS_ENDED: \"SET_IS_ENDED\",\n  SET_VOLUME: \"SET_VOLUME\",\n  REMOVE_MUSIC: \"REMOVE_MUSIC\",\n};\n"],"sourceRoot":""}