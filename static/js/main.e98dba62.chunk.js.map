{"version":3,"sources":["redux/playing/action-types.js","redux/playing/selectors.js","redux/playing/musicReducer.js","redux/index.js","redux/store.js","components/Loading/styles.js","components/Loading/index.js","App.js","index.js"],"names":["ActionTypes","SET_MUSIC","REMOVE_MUSIC","selectros","isItemInList","id","store","currentMusic","some","item","getMusic","music","musicInitialState","reducers","combineReducers","state","type","payload","filter","persistConfig","key","storage","persistedReducer","persistReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","rotate","keyframes","StLoadingContainer","styled","section","StLoadingLayoutContainer","main","Loading","Error","lazy","NowPlaying","Home","Explore","Igtv","Microphone","Time","App","audio","useRef","useSelector","fallback","path","exact","ref","src","music_src","autoPlay","configStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"mGAAA,kCAAO,IAAMA,EAAc,CACzBC,UAAW,YACXC,aAAc,iB,gCCFhB,IAMMC,EAAY,CAChBC,aALmB,SAACC,GAAD,OAAQ,SAACC,GAC5B,OAAOA,EAAMC,aAAaA,aAAaC,MAAK,SAACC,GAAD,OAAUA,EAAKJ,KAAOA,OAKlEK,SARe,SAACJ,GAAD,OAAWA,EAAMK,MAAMJ,eAWzBJ,O,kJCTTS,EAAoB,CACxBL,aAAc,ICKDM,EAJEC,YAAgB,CAC/BH,MDC0B,WAAmD,IAAlDI,EAAiD,uDAAzCH,EAAyC,yCAApBI,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9D,OAAQD,GACN,KAAKhB,IAAYC,UACf,OAAO,2BAAKc,GAAZ,IAAmBR,aAAc,CAACU,KACpC,KAAKjB,IAAYE,aACf,OAAO,2BACFa,GADL,IAEER,aAAcQ,EAAMR,aAAaW,QAC/B,SAACT,GAAD,OAAUA,EAAKJ,KAAOY,EAAQZ,QAIpC,QACE,OAAOU,MEdPI,EAAgB,CACpBC,IAAK,OACLC,QAASA,KAGLC,EAAmBC,YAAeJ,EAAeN,GAWxCP,EATD,WACZ,IAAIA,EAAQkB,YACVF,EACAG,OAAOC,8BAAgCD,OAAOC,gCAGhD,MAAO,CAAEpB,QAAOqB,UADAC,YAAatB,K,+BCfzBuB,EAASC,YAAH,4DAICC,EAAqBC,IAAOC,QAAV,qXAedJ,GAGJK,EAA2BF,IAAOG,KAAV,8O,OCXtBC,EAVC,WACd,OACE,cAACF,EAAD,UACE,cAACH,EAAD,UACE,8B,QCDFM,EAAQC,gBAAK,kBAAM,sDACnBC,EAAaD,gBAAK,kBAAM,sEACxBE,EAAOF,gBAAK,kBAAM,oEAClBG,EAAUH,gBAAK,kBAAM,sDACrBI,EAAOJ,gBAAK,kBAAM,sDAClBK,EAAaL,gBAAK,kBAAM,uDACxBM,EAAON,gBAAK,kBAAM,uDAoCTO,MAlCf,WACE,IAAMC,EAAQC,mBACRxC,EAAeyC,YAAY7C,IAAUO,UAAU,GACrD,OACE,eAAC,WAAD,CAAUuC,SAAU,cAAC,EAAD,IAApB,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAACX,EAAD,MAEF,cAAC,IAAD,CAAOU,KAAK,cAAcC,OAAK,EAA/B,SACE,cAACR,EAAD,MAEF,cAAC,IAAD,CAAOO,KAAK,QAAQC,OAAK,EAAzB,SACE,cAACP,EAAD,MAEF,cAAC,IAAD,CAAOM,KAAK,QAAQC,OAAK,EAAzB,SACE,cAACT,EAAD,MAEF,cAAC,IAAD,CAAOQ,KAAK,WAAWC,OAAK,EAA5B,SACE,cAACV,EAAD,MAEF,cAAC,IAAD,CAAOS,KAAK,kBAAkBC,OAAK,EAAnC,SACE,cAACZ,EAAD,MAEF,cAAC,IAAD,UACE,cAACF,EAAD,WAIN,uBAAOe,IAAKN,EAAOO,IAAG,OAAE9C,QAAF,IAAEA,OAAF,EAAEA,EAAc+C,UAAWC,UAAQ,Q,ECrClCC,IAArBlD,E,EAAAA,MAAOqB,E,EAAAA,UAEf8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUrD,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAasD,QAAS,KAAMjC,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINkC,SAASC,eAAe,W","file":"static/js/main.e98dba62.chunk.js","sourcesContent":["export const ActionTypes = {\n  SET_MUSIC: \"SET_MUSIC\",\n  REMOVE_MUSIC: \"REMOVE_MUSIC\",\n};\n","const getMusic = (store) => store.music.currentMusic;\n\nconst isItemInList = (id) => (store) => {\n  return store.currentMusic.currentMusic.some((item) => item.id === id);\n};\n\nconst selectros = {\n  isItemInList,\n  getMusic,\n};\n\nexport default selectros;\n","import { ActionTypes } from \"./action-types\";\n\nconst musicInitialState = {\n  currentMusic: [],\n};\n\nexport const musicReducer = (state = musicInitialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_MUSIC:\n      return { ...state, currentMusic: [payload] };\n    case ActionTypes.REMOVE_MUSIC:\n      return {\n        ...state,\n        currentMusic: state.currentMusic.filter(\n          (item) => item.id !== payload.id\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { musicReducer } from \"./playing/musicReducer\";\n\n//combine reducers\nconst reducers = combineReducers({\n  music: musicReducer,\n});\n\nexport default reducers;\n","import { createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport reducers from \"./index\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst store = () => {\n  let store = createStore(\n    persistedReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nexport default store;\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\nto{transform : rotate(360deg)}\n`;\n\nexport const StLoadingContainer = styled.section`\n  width: 100vw;\n  height: 100vh;\n  color: #fff;\n  font-size: 2rem;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  & span {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    border: 2px solid #fff;\n    border-top-color: #909090;\n    animation: ${rotate} 0.6s linear infinite;\n  }\n`;\nexport const StLoadingLayoutContainer = styled.main`\n  min-width: 100vw;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-color: #000;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n","import React from \"react\";\nimport { StLoadingContainer, StLoadingLayoutContainer } from \"./styles\";\n\nconst Loading = () => {\n  return (\n    <StLoadingLayoutContainer>\n      <StLoadingContainer>\n        <span />\n      </StLoadingContainer>\n    </StLoadingLayoutContainer>\n  );\n};\n\nexport default Loading;\n","import React, { lazy, Suspense, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Loading from \"./components/Loading\";\nimport selectros from \"./redux/playing/selectors\";\n\nconst Error = lazy(() => import(\"./components/Error\"));\nconst NowPlaying = lazy(() => import(\"./components/NowPlaying\"));\nconst Home = lazy(() => import(\"./components/Home\"));\nconst Explore = lazy(() => import(\"./components/Explore\"));\nconst Igtv = lazy(() => import(\"./components/Igtv\"));\nconst Microphone = lazy(() => import(\"./components/Microphone\"));\nconst Time = lazy(() => import(\"./components/Time\"));\n\nfunction App() {\n  const audio = useRef();\n  const currentMusic = useSelector(selectros.getMusic)[0];\n  return (\n    <Suspense fallback={<Loading />}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/microphone\" exact>\n            <Microphone />\n          </Route>\n          <Route path=\"/time\" exact>\n            <Time />\n          </Route>\n          <Route path=\"/igtv\" exact>\n            <Igtv />\n          </Route>\n          <Route path=\"/explore\" exact>\n            <Explore />\n          </Route>\n          <Route path=\"/nowplaying/:id\" exact>\n            <NowPlaying />\n          </Route>\n          <Route>\n            <Error />\n          </Route>\n        </Switch>\n      </Router>\n      <audio ref={audio} src={currentMusic?.music_src} autoPlay></audio>\n    </Suspense>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport configStore from \"./redux/store\";\nimport App from \"./App\";\n\nconst { store, persistor } = configStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}